{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 methods zijn voor objects.\
name.length is een method van de object name\
{\field{\*\fldinst{HYPERLINK "http://this.name/"}}{\fldrslt \cf3 \ul \ulc3 \strokec3 this.name}} refereert naar de naam in het betreffende object.\
global scope\
function scope\
block scope\
global scope bijv:\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 const name = "danny";\
\
console.log(name)\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 global scope pakt het eerst vd javascript, hoe diep je ook zit. De variabele die op het hoogste niveau is gedeclareerd kun je altijd aanroepen.\
local scope\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 function greeting() \{\
const name = "danny" ;\
\
\}\
\
console.log(name)'\
dit werkt niet\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 de console log wilt toegang tot greeting maar dat krijgt die niet door de gatekeepers de \{\}.\
daarom werkt deze niet.\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 function greeting() \{\
const name = "danny" ;\
console.log(name)'\
\}\
\
greeting()\
dit dit werkt wel omdat de console log binnen de gatekeepers staat.\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 block scope\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 if (true) \{\
var x = 5;\
\}\
\
console.log(x)\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 bij een block scope geef je alleen de var toestemming om buiten om de gate keepers een bepaalde waarde op te pakken. dit is alleen bij var. bij const of let werkt dit niet.\
block scope is minder streng. is ook een if state of een condition. dit werkt ook als de if statement in een function staat.\
hoisting\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 console.log(num)\
var num;\
num = 6;\
dit geeft undifened\
\
num = 6;\
console.log(num);\
var num;\
dit geeft 6\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 js denkt oh er staat geen var voor num dus hij wordt gehoist, hierdoor onthoudt die hem.\
het num stukje is hoisten\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 myJob = "developer"\
console.log("my job is" = myJob);\
var = myJob\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf2 myJob wordt gehost\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 beste is :\
\
var myJob = "developer"\
console.log("my job is" = myJob);\
}